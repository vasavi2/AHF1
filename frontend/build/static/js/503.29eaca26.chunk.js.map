{"version":3,"file":"static/js/503.29eaca26.chunk.js","mappings":"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","sources":["WorkSpace_Component/constants.js","WorkSpace_Component/reducers.js","WorkSpace_Component/actions.js","WorkSpace_Component/properties.js","WorkSpace_Component/newPopup.js","WorkSpace_Component/Header.js","WorkSpace_Component/bootstrap.js","WorkSpace_Component/store.js","webpack://dashboard/./src/WorkSpace_Component/redux.scss?4db8"],"sourcesContent":["export const EDITOR_UPDATES = \"EDITOR_UPDATES\";\r\nexport const EDITOR_PROPERTIES = \"EDITOR_PROPERTIES\";\r\nexport const CREATE_WORKSPACE = \"CREATE_WORKSPACE\";\r\n","import * as Actions from \"./constants\";\r\nconst clearMock = () => [];\r\nconst Propertiesopen = () => [];\r\nconst Openclosedemo = () => [];\r\nconst outputjson = () => [];\r\nconst workspacejson=()=>[];\r\nconst removeConnection = (state, connection) => {\r\n  const inputNodeIndex = state.nodes.findIndex(\r\n    (n) => n.id === connection.input.nodeId\r\n  );\r\n  const inputConnections =\r\n    state.nodes[inputNodeIndex].inputs[connection.input.port].connection;\r\n  const inputConnectionIndex = inputConnections.findIndex(\r\n    (s) =>\r\n      s.nodeId === connection.output.nodeId && s.port === connection.output.port\r\n  );\r\n  inputConnections.splice(inputConnectionIndex, 1);\r\n  const outputNodeIndex = state.nodes.findIndex(\r\n    (n) => n.id === connection.output.nodeId\r\n  );\r\n  const outputConnections =\r\n    state.nodes[outputNodeIndex].outputs[connection.output.port].connection;\r\n  const outputConnectionIndex = outputConnections.findIndex(\r\n    (s) =>\r\n      s.nodeId === connection.input.nodeId && s.port === connection.input.port\r\n  );\r\n  outputConnections.splice(outputConnectionIndex, 1);\r\n};\r\nexport const reducer = (\r\n  state = {\r\n    nodes: clearMock(),\r\n    popup: Propertiesopen(),\r\n    openclose1: Openclosedemo(),\r\n    output: outputjson(),\r\n    workspace:workspacejson()\r\n  },\r\n  action\r\n) => {\r\n  if (action.type === Actions.EDITOR_UPDATES) {\r\n    const payload = action.payload;\r\n\r\n    // const classNames = Math.random() > 0.7 ? ['invalid'] : [];\r\n    if (payload.type === \"ConnectionCreated\") {\r\n      const inputIndex = state.nodes.findIndex(\r\n        (n) => n.id === payload.input.nodeId\r\n      );\r\n      const outputIndex = state.nodes.findIndex(\r\n        (n) => n.id === payload.output.nodeId\r\n      );\r\n\r\n      const outputConnection = {\r\n        nodeId: payload.output.nodeId,\r\n        port: payload.output.port,\r\n      };\r\n\r\n      const inputConnection = {\r\n        nodeId: payload.input.nodeId,\r\n        port: payload.input.port,\r\n      };\r\n\r\n      state.nodes[inputIndex].inputs[payload.input.port].connection.push(\r\n        outputConnection\r\n      );\r\n      state.nodes[outputIndex].outputs[payload.output.port].connection.push(\r\n        inputConnection\r\n      );\r\n    } else if (payload.type === \"ConnectionRemoved\") {\r\n      removeConnection(state, payload);\r\n    } else if (payload.type === \"NodeCreated\") {\r\n      state.nodes.push(payload.node);\r\n    } else if (payload.type === \"NodeSelected\") {\r\n      // eslint-disable-next-line no-unused-expressions\r\n      state.popup.length === 0\r\n        ? (state.popup.push(payload.node), state.openclose1.push(payload.type))\r\n        : (state.popup.pop(), state.openclose1.pop());\r\n    } else if (payload.type === \"NodeRemoved\") {\r\n      for (const conn of payload.correspondingConnections) {\r\n        removeConnection(state, conn);\r\n      }\r\n      const inputNode = state.nodes.findIndex((n) => n.id === payload.id);\r\n      state.nodes.splice(inputNode, 1);\r\n    }\r\n\r\n    return Object.assign({}, state);\r\n    // eslint-disable-next-line no-unreachable\r\n  } else if (action.type === Actions.EDITOR_PROPERTIES) {\r\n    const payload = action.payload;\r\n\r\n    const obj = {\r\n      id: payload.id,\r\n      properties: payload.properties === null ? {} : payload,\r\n    };\r\n\r\n    state.output.push(obj);\r\n  } else if (action.type === Actions.CREATE_WORKSPACE) {\r\n    const payload = action.payload;\r\n    const obj = {\r\n      workspacename: payload.workspacename,\r\n      Category: payload.Category,\r\n    };\r\n\r\n    state.workspace.push(obj);\r\n    console.log(\"state.workspace\", state.workspace);\r\n\r\n  }\r\n\r\n  return state;\r\n};\r\n","import { createAction } from 'redux-actions';\r\nimport * as Actions from './constants';\r\nexport const editorUpdatesAction = createAction(Actions.EDITOR_UPDATES);\r\nexport const propertiesUpdatesAction = createAction(Actions.EDITOR_PROPERTIES);\r\nexport const workspaceCreateAction = createAction(Actions.CREATE_WORKSPACE);","import React from \"react\";\r\nimport useKeypress from \"react-use-keypress\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nfunction Properties(props) {\r\n  const datas = useSelector((state) => state);\r\n\r\n  const [isLoading1, setIsLoading1] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const initialValues1 = [];\r\n\r\n  const [values, setValues] = useState(initialValues1);\r\n  const dispatch = useDispatch();\r\n\r\n  useKeypress([\"Delete\"], () => {\r\n    setIsLoading1(\"\");\r\n    isLoading1 === \"NodeSelected\" &&\r\n      confirmAlert({\r\n        title: \"Confirm to Delete Node ?\",\r\n        message: \"Are you sure to do this.\",\r\n        buttons: [\r\n          {\r\n            label: \"Yes\",\r\n            onClick: () => {\r\n              if (datas.nodes.length > 0) {\r\n                const idsToRemove = [datas.popup[0].id]; //filif\r\n\r\n                const filtered = datas.nodes.filter(\r\n                  (item) => !idsToRemove.includes(item.id)\r\n                );\r\n\r\n                datas.nodes = [];\r\n                filtered.map((iteam) => {\r\n                  return datas.nodes.push(iteam);\r\n                });\r\n\r\n                console.log(\"filter\", datas.nodes);\r\n                return [...datas.nodes];\r\n              }\r\n            },\r\n          },\r\n          {\r\n            label: \"Cancel\",\r\n            onClick: () => {\r\n               return ;\r\n            },\r\n          },\r\n        ],\r\n      });\r\n    return [];\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    const obj = {\r\n      type: \"EDITOR_PROPERTIES\",\r\n      payload: values,\r\n    };\r\n\r\n    dispatch(obj);\r\n\r\n    setValues(initialValues1);\r\n    setIsLoading1(\"\")\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1);\r\n\r\n\r\n    setLoading(true);\r\n    setIsError(false);\r\n  };\r\n\r\n  const loading1 = datas.openclose1[0];\r\n  useEffect(() => {\r\n    setIsLoading1(loading1);\r\n  }, [loading1]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n      id: datas.popup[0].id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading1 === \"NodeSelected\" ? (\r\n        <div id=\"popup1\" className=\"overlay\">\r\n          <div className=\"popup\">\r\n            <div\r\n              style={{\r\n                borderBottom: \"#FFFFFF 2px solid\",\r\n                width: \"87px\",\r\n              }}\r\n            >\r\n              <h2\r\n                style={{\r\n                  color: \"#FFFFFF\",\r\n                  fontSize: \"small\",\r\n                }}\r\n              >\r\n                PROPERTIES\r\n              </h2>\r\n            </div>\r\n            <button onClick={() => setIsLoading1(\"\")} className=\"close\">\r\n              x\r\n            </button>\r\n\r\n            <div className=\"content\">\r\n            <form>\r\n              <p\r\n                style={{\r\n                  color: \"#FFFFFF\",\r\n                }}\r\n              >\r\n               \r\n                  <div>\r\n                    {datas.popup.map((objKey) =>\r\n                      Object.entries(objKey.properties).map(([key, value]) => (\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexFlow: \"column wrap\",\r\n                          }}\r\n                        >\r\n                          <div>\r\n                            <label> {key} </label>\r\n                          </div>\r\n                          <div>\r\n                            {value.type === \"text\" ? (\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type={value.type}\r\n                                id=\"valueData\"\r\n                                name={key}\r\n                                value={values.myvalue1}\r\n                                onChange={handleInputChange}\r\n                                placeholder={value.value}\r\n                              />\r\n                            ) : (\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name={key}\r\n                                id=\"valueData1\"\r\n                                value={values.myvalue1}\r\n                                onChange={handleInputChange}\r\n                              >\r\n                                <option>Select</option>\r\n                                {value.values.map((optionvalue) => {\r\n                                  return (\r\n                                    <option value={optionvalue}>\r\n                                      {optionvalue}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </select>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    )}\r\n                  </div>\r\n                  {isError && (\r\n                    <small className=\"mt-3 d-inline-block text-danger\"></small>\r\n                  )}\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"properties-button\"\r\n                    onClick={handleSubmit}\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? \"Loading...\" : \"SAVE\"}\r\n                  </button>\r\n               \r\n              </p>\r\n               </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\nexport default Properties;\r\n","import React from \"react\";\r\nimport { useState,useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from 'axios'\r\nimport \"./popups.scss\"\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\n// import \"./popup.scss\"\r\nfunction NewPopup({ name, onNameChange }) {\r\n\r\n  const dashboard=[] \r\n  const [newdashboard,SetnewDshboard]=useState(dashboard)\r\n  const [random,setRandom]=useState(0)\r\n  const [months,setMonths]=useState(\"\")\r\n\r\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\r\n\r\n  \r\n  const initialValues1 = {};\r\n  const [names,setName]=useState(\"\")\r\n  const [values, setValues] = useState(initialValues1);\r\n  const [loading, setLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const datas = useSelector((state) => state);\r\n  \r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCurrentDateTime(new Date());\r\n    }, 1000); // Update every second\r\n    return () => {\r\n      clearInterval(intervalId); // Clean up the interval when the component unmounts\r\n    };\r\n  }, []);\r\n\r\n\r\n  const formattedDate = new Date().toLocaleDateString(undefined, {\r\n    day: '2-digit',\r\n    month: 'short',\r\n    year: 'numeric',\r\n  })\r\n\r\n \r\n\r\n//\r\n  function formatDate(date) {\r\n    const options = { day: '2-digit', month: 'short', year: 'numeric' };\r\n    const formattedDate = new Intl.DateTimeFormat(undefined, options).format(date);\r\n    return formattedDate.replace('.', ''); // Remove dots from the abbreviated month name\r\n  }\r\n  const currentDateTime1 = formatDate(new Date());\r\n\r\n  //\r\n\r\n\r\n  const now=new Date()\r\n  const options={hour12:false};\r\n  const formattedTime=now.toLocaleTimeString(undefined,options)\r\n  // const formattedTime = currentDateTime.toLocaleTimeString();\r\n  const date = new Date();\r\n\r\n  const day = date.getDate();\r\n\r\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n  const monthIndex = date.getMonth();\r\n\r\n  const year = date.getFullYear();\r\n\r\n    \r\n\r\n  const formattedDate2 = `${day}-${monthNames[monthIndex]}-${year}`;\r\n\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setRandom(random+1)\r\n    console.log(\"count\",random)\r\n\r\n    setValues((values)=>({...values,[name]:value}) );\r\n    const time=formattedDate2+\"|\"+formattedTime\r\n\r\n    SetnewDshboard((newdashboard)=>[...newdashboard,{\"TaskNo\":random,\"PipilineName\":names.charAt(0).toUpperCase()+names.slice(1),\"Created_on\":time\r\n    ,Status: \"Paused\",\r\n     Owner: \"Nagaraj\",\r\n    Description: \"Working on the workspace\",\r\n  remark:\"None\"}])\r\n\r\n  console.log(\"old\",newdashboard)\r\n      \r\n\r\n    //\r\n  };\r\n\r\n\r\n\r\n  const handleSubmit = () => {\r\n    const obj = {\r\n      type: \"CREATE_WORKSPACE\",\r\n      payload: values,\r\n    };\r\n    console.log(\"normal\",newdashboard[0])\r\n    console.log(\"nrml\",newdashboard)\r\n    \r\n    axios.post(\"http://127.0.0.1:9090/insertDashboardData\",newdashboard[0])\r\n    .then((response)=>{console.log(\"api for dashboard\",response)})\r\n    dispatch(obj);\r\n    setLoading(false);\r\n\r\n\r\n    onNameChange(names.charAt(0).toUpperCase()+names.slice(1))\r\n    \r\n    \r\n   };\r\n\r\n  return (\r\n    <>\r\n      {loading === true ? (\r\n        // <div className=\"ws_popup-container \">\r\n                  <div className=\"ws_popup_container \">\r\n\r\n          <div className=\"ws_popups\">\r\n            <div\r\n              className=\"ws_popup-inners\"\r\n              style={{\r\n                borderStyle: \"solid\",\r\n                borderColor: \"#e8eef5\",\r\n              }}\r\n            >\r\n              <div className=\"ws_popup-titles\">\r\n                <h6 style={{color:\"white\"}}>Workspace</h6>\r\n\r\n\r\n              </div>\r\n\r\n              <div className=\"ws_popup-content\" style={{ flexGrow: 1 }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    margin: \"25px\",\r\n                  }}\r\n                >\r\n                  <div style={{ margin: \"13px\" }}>\r\n\r\n                    {/* <button style={{position:\"absolute\",bottom:\"400px\",right:\"600px\"}} onClick={HomeButton}>Home</button> */}\r\n                    \r\n                    \r\n              <a href=\"/dashboard\">\r\n              \r\n              <button style={{cursor:\"pointer\",position:\"fixed\",bottom:\"400px\",right:\"652px\"}}>\r\n              <HomeIcon/>\r\n              </button>.\r\n            </a>\r\n\r\n                    <label style={{margin: \"12px\",}}>Name</label>\r\n                    <input type=\"text\" value={names}  style={{\r\n                        borderColor: \"grey\",\r\n                        width: \"183px\",\r\n                        height: \"25px\",\r\n                        borderRadius: \"7px\",\r\n                      }} onChange={(e)=>setName(e.target.value)}/>\r\n\r\n                  \r\n                  </div>\r\n                  <div style={{ margin: \"13px\" }}>\r\n                    <label\r\n                      style={{\r\n                        margin: \"5px\",\r\n                      }}\r\n                    >\r\n                      Category\r\n                    </label>\r\n                    <select name=\"Category\" onChange={handleInputChange}>\r\n                      <option>Select </option>\r\n                      <option value=\"Marketing\">Manufacturing</option>\r\n                      <option value=\"Finance\">Oil & Gas</option>\r\n                      <option value=\"Finance\">Chemical Industry </option>\r\n                      <option value=\"Finance\">Plant Engineering</option>\r\n\r\n\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div style={{ margin: \"auto\" }}>\r\n                    <button\r\n                      // onClick={onSubmit}\r\n                      type=\"button\"\r\n                      onClick={handleSubmit}\r\n                      style={{\r\n                        width: \"153px\",\r\n                        height: \"35px\",\r\n                        color: \"white\",\r\n                        background:\r\n                          \"transparent linear-gradient(256deg, #0479B2 0%, #1B5D94 100%) 0% 0% no-repeat padding-box\",\r\n                        boxShadow: \"3px 3px 7px #0873AC0F\",\r\n                        borderRadius: \" 10px\",\r\n                        opacity: 1,\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\nexport default NewPopup;\r\n","import React from \"react\";\r\nimport {   FaSearch, FaBell } from \"react-icons/fa\";\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport Badge from '@mui/material/Badge';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\nimport profile from \"../Dashboard_Component/profile.png\"\r\nvar date = new Date().toDateString();\r\nexport const Header = () => (\r\n  <div className=\"flex-header-containers\">\r\n    <div className=\"flex-header-date\">\r\n      <a href=\"/dashboard\">\r\n              \r\n              <button style={{cursor:\"pointer\"}}>\r\n              <HomeIcon/>\r\n              </button>.\r\n            </a>\r\n    </div>\r\n    <div className=\"flex-header-icons\">\r\n    <b>{date}</b>\r\n\r\n      {/* <div className=\"flex-header-search\">\r\n        <FaSearch   />\r\n      </div>\r\n      <div className=\"flex-header-notification\">\r\n        <FaBell   />\r\n      </div>\r\n      <div className=\"flex-header-profile\">\r\n        <img src={profile} width='25px' height='25px' alt=\"profile\"/>\r\n      </div> */}\r\n    </div>\r\n  </div>\r\n\r\n \r\n);\r\nexport default Header;\r\n","import React, { useState,useRef } from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport {Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { configureStore } from \"./store\";\r\nimport * as Actions from \"./actions\";\r\nimport { Editor, MenuItem } from \"react-flow-editor\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Jsondata from \"./data.json\"\r\nimport Properties from \"./properties\";\r\n// import Logo from \"../public/logo.png\";\r\nimport Logo from \"./logo.png\"\r\n// import NewPopup from \"./newPopup\";\r\nimport NewPopup from \"./newPopup\"\r\nimport Header from \"./Header\";\r\n// import Header from \"./Header\";\r\nimport logo from \"./icon.jpg\"\r\n\r\nimport html2canvas from 'html2canvas';\r\nrequire(\"./redux.scss\");\r\n\r\n\r\n\r\nfunction resolver(node) {\r\n  return React.createElement(\"div\", {\r\n    style: { height: \"200px\", width: \"200px\" },\r\n  });\r\n}\r\n\r\nconst config = {\r\n  resolver,\r\n  connectionType: \"bezier\",\r\n  grid: true,\r\n  direction: \"we\",\r\n\r\n  connectionAnchorsLength: 40,\r\n};\r\nconst store = configureStore();\r\n\r\nconst inputfactory = (type, provalue) => () => ({\r\n  name: `${type}`,\r\n  type,\r\n  id: \"\",\r\n  inputs: [{ connection: [], name: type }],\r\n  outputs: [],\r\n  properties: provalue,\r\n  classNames: [type],\r\n  checkbox: [provalue],\r\n});\r\n\r\nconst outputfactory = (type, provalue) => () => ({\r\n  name: `${type}  `,\r\n  type,\r\n  id: \"\",\r\n  inputs: [],\r\n  outputs: [{ connection: [], name: type }],\r\n  properties: provalue,\r\n  classNames: [type],\r\n});\r\nconst inputoutputfactory = (type, provalue) => () => ({\r\n  name: `${type}  `,\r\n  type,\r\n  id: \"\",\r\n  inputs: [{ connection: [], name: type }],\r\n  outputs: [{ connection: [], name: type }],\r\n  properties: provalue,\r\n  classNames: [type],\r\n});\r\n\r\nfunction Bootstrap({ props }) {\r\n  //\r\n  const [pipeline,setPipeline]=useState([])\r\n  \r\n  const [count, setCount] = useState();\r\n  const [workspace, setWorkspace] = useState(\"New WorkSpace\");\r\n  //\r\n  const [screenshot, setScreenshot] = useState(null);\r\n  const countRef = useRef(null);\r\n  const [enableHome,setEnableHome]=useState(false)\r\n\r\n\r\n\r\n\r\n  const enableButton=(arg)=>{\r\n    setEnableHome(arg)\r\n\r\n\r\n  }\r\n\r\n\r\n  const handleDownload = () => {\r\n    console.log(\"hello\")\r\n    html2canvas(countRef.current).then((canvas) => {\r\n      const dataUrl = canvas.toDataURL('image/png');\r\n      setScreenshot(dataUrl);\r\n      console.log(\"pipeline url\",pipeline)\r\n\r\n\r\n      console.log(\"screenshot\",screenshot)\r\n      setPipeline((pipeline)=>[...pipeline,{workspaceName:workspace,Screenimage:dataUrl}])\r\n      console.log(\"normal pipeline\",pipeline)\r\n\r\n      axios.post(\"http://127.0.0.1:9090/insertWorkspace\",pipeline[0])\r\n      .then((response)=>{console.log(\"api for pipeline\",response)})\r\n      console.log(\"pipeline url-2\",pipeline)\r\n\r\n    });\r\n\r\n    if (screenshot) {\r\n      // Create a temporary anchor element to trigger the download\r\n      alert(\"Successful screenshot capture\")\r\n      const a = document.createElement('a');\r\n      console.log(\"data\",a)\r\n      console.log(\"screenshot\",screenshot)\r\n\r\n      \r\n\r\n      a.href = screenshot;\r\n      a.download = 'screenshot.png';\r\n      a.click();\r\n          }\r\n    };\r\n\r\n    \r\n\r\n\r\n  const datas = useSelector((state) => state);\r\n  console.log(\"<----------------Json element---------->\",Jsondata)\r\n  return React.createElement(\r\n\r\n    \"div\",\r\n    { className: \"main-workarea flex-container-sidebar\" },\r\n\r\n    \r\n    // React.createElement(\"div\",\r\n    // { className: \"flex-container-sidebar-sidemenu\" },\r\n    // React.createElement(\r\n    //   \"div\",\r\n    //   { className: \"flow-menu\" },\r\n    //   React.createElement(Link,{to:\"/dashboard\",className:\"faq-drawer__title\"},\"HOME\")\r\n    // )),\r\n    \r\n\r\n    React.createElement(\r\n      \"img\",\r\n      { src: Logo, width: \"160px\", height: \"69px\" },\r\n      null\r\n    ),\r\n    // React.createElement(\r\n    //   \"button\",\r\n    //   {\r\n    //     className: \"your-button-class\", // Add your own button class\r\n    //     onClick: () => {\r\n    //       console.log(\"hello\")\r\n    //       // Add your button click functionality\r\n    //       // For example, you can redirect to a specific page\r\n    //       window.location.href = \"/your-page\";\r\n    //     },\r\n    //   },\r\n    //   \"Home\"\r\n    // ),\r\n\r\n    \r\n    \r\n    React.createElement(\"div\",\r\n    { className: \"flex-container-sidebar-sidemenu\" },\r\n    React.createElement(\r\n      \"div\",\r\n      { className: \"flow-menu\" },\r\n      React.createElement(\"HOME\")\r\n    )),\r\n    \r\n    \r\n    React.createElement(\r\n      \"div\",\r\n      { className: \"flex-container-sidebar-sidemenu\" },\r\n\r\n      React.createElement(\r\n        \"div\",\r\n        { className: \"flow-menu\" },\r\n\r\n\r\n\r\n        Jsondata.length !== 0 &&\r\n        \r\n          Jsondata.map((tag, i) => (\r\n            <div key={i}>\r\n              {count === i ? (\r\n                <div\r\n                  onClick={() => setCount()}\r\n                  className=\"faq-drawer__title-after\"\r\n                  key={i}\r\n                >\r\n                <span>  {tag.iteam}  </span>\r\n                </div>\r\n              ) : (\r\n                <div onClick={() => setCount(i)} className=\"faq-drawer__title\">\r\n                  {tag.iteam}\r\n                </div>\r\n              )}\r\n\r\n              {count === i ? (\r\n                <div>\r\n                  {tag.submenu !== 0 &&\r\n\r\n                    tag.submenu.map((sub, i) =>\r\n\r\n\r\n                      React.createElement(MenuItem, {\r\n                        classNames: [sub.name],\r\n                        name: sub.name,\r\n\r\n                        factory:\r\n                          sub.iO.length !== 0 && sub.iO === \"inputfactory\"\r\n                            ? inputfactory(sub.name, sub.properties)\r\n                            : null || sub.iO === \"outputfactory\"\r\n                            ? outputfactory(sub.name, sub.properties)\r\n                            : null || sub.iO === \"inputoutputfactory\"\r\n                            ? inputoutputfactory(sub.name, sub.properties)\r\n                            : null\r\n\r\n                      })\r\n                    )}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          ))\r\n      )\r\n    ),\r\n\r\n    React.createElement(\r\n      \"div\",\r\n      { className: \"flex-container-content\" },\r\n\r\n\r\n      React.createElement(\r\n        \"div\",\r\n        { className: \"flex-container-content-header\" },\r\n\r\n        <Header  enableHomeBtn={enableHome}/>\r\n\r\n      ),\r\n      React.createElement(\r\n        \"div\",\r\n        { className: \"flex-container-content-header \" },\r\n        props.state.workspace.length !== 0 ? null : (<div>\r\n          <NewPopup name={workspace} onNameChange={setWorkspace} />\r\n          </div>\r\n        )\r\n      ),\r\n\r\n      React.createElement(\r\n        \"div\",\r\n        // { className: \"flex-container-content-workarea\" ,ref:countRef},\r\n        { className: \"flex-container-content-workarea\" },\r\n\r\n\r\n        React.createElement(\r\n          \"div\",\r\n          { className: \"react-flow-header-title\" },\r\n\r\n          React.createElement(\"div\", null\r\n          , `${workspace}`\r\n          ,React.createElement(\"img\",{\r\n            src:logo,\r\n            // className:\"react-flow-header-title-icon\",\r\n            width: \"30px\", height: \"18px\",alt:\"Download Icon\",onClick:handleDownload,\r\n            style:{cursor:\"pointer\",marginLeft:\"10px\"}\r\n          }\r\n            )              ),\r\n          \r\n\r\n          React.createElement(\"div\",{ className: \"react-flow-editor \" ,ref:countRef}\r\n          ,\r\n          React.createElement(\r\n            Editor,\r\n            {\r\n              config: Object.assign(Object.assign({}, config), {\r\n                onChanged: props.actions.editorUpdatesAction,\r\n              }),\r\n              nodes: props.state.nodes,\r\n            },\r\n\r\n            React.createElement(\r\n              \"button\",\r\n              {\r\n                className: \"react-flow-header-button\",\r\n                tyle: \"button\",\r\n              },\r\n              \"SUBMIT\"\r\n            )\r\n          \r\n\r\n        )\r\n        )\r\n        )\r\n      ),\r\n      React.createElement(\r\n        \"div\",\r\n        { className: \"flex-container-content-workarea\" },\r\n        <Properties />\r\n\r\n      )\r\n      \r\n      \r\n      \r\n\r\n      \r\n    \r\n  )\r\n  \r\n  \r\n  );\r\n}\r\nexport default Bootstrap;\r\nconst render = (props) => <Bootstrap props={props} />;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: bindActionCreators(Actions, dispatch),\r\n});\r\nconst Container = connect(mapStateToProps, mapDispatchToProps)(render);\r\nReactDOM.render(\r\n  React.createElement(\r\n    Provider,\r\n    { store: store },\r\n    React.createElement(Container, null)\r\n  ),\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createStore } from 'redux';\r\nimport { reducer } from './reducers';\r\nexport function configureStore(initialState) {\r\n    const store = createStore(reducer, initialState, window.devToolsExtension && window.devToolsExtension());\r\n    if (module.hot) {\r\n        module.hot.accept('./reducers', () => {\r\n            store.replaceReducer(reducer);\r\n        });\r\n    }\r\n    return store;\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["EDITOR_UPDATES","EDITOR_PROPERTIES","CREATE_WORKSPACE","removeConnection","state","connection","inputNodeIndex","nodes","findIndex","n","id","input","nodeId","inputConnections","inputs","port","inputConnectionIndex","s","output","splice","outputNodeIndex","outputConnections","outputs","outputConnectionIndex","reducer","arguments","length","undefined","popup","openclose1","workspace","action","type","Actions","payload","inputIndex","outputIndex","outputConnection","inputConnection","push","node","pop","conn","correspondingConnections","inputNode","Object","assign","obj","properties","workspacename","Category","console","log","editorUpdatesAction","createAction","propertiesUpdatesAction","workspaceCreateAction","props","datas","useSelector","isLoading1","setIsLoading1","useState","loading","setLoading","isError","setIsError","initialValues1","values","setValues","dispatch","useDispatch","useKeypress","confirmAlert","title","message","buttons","label","onClick","idsToRemove","filtered","filter","item","includes","map","iteam","loading1","useEffect","handleInputChange","e","name","value","target","_jsx","children","className","_jsxs","style","borderBottom","width","color","fontSize","objKey","entries","_ref","key","display","flexFlow","myvalue1","onChange","placeholder","optionvalue","handleSubmit","setTimeout","disabled","onNameChange","newdashboard","SetnewDshboard","random","setRandom","months","setMonths","currentDateTime","setCurrentDateTime","Date","names","setName","intervalId","setInterval","clearInterval","toLocaleDateString","day","month","year","date","Intl","DateTimeFormat","format","replace","formatDate","formattedTime","toLocaleTimeString","hour12","getDate","monthIndex","getMonth","getFullYear","formattedDate2","concat","_Fragment","borderStyle","borderColor","flexGrow","flexDirection","margin","href","cursor","position","bottom","right","HomeIcon","height","borderRadius","time","charAt","toUpperCase","slice","Status","Owner","Description","remark","axios","post","then","response","background","boxShadow","opacity","toDateString","Header","require","config","resolver","React","connectionType","grid","direction","connectionAnchorsLength","store","createStore","initialState","window","devToolsExtension","outputfactory","provalue","classNames","inputoutputfactory","Bootstrap","pipeline","setPipeline","count","setCount","setWorkspace","screenshot","setScreenshot","countRef","useRef","enableHome","setEnableHome","Jsondata","src","tag","i","submenu","sub","MenuItem","factory","iO","checkbox","inputfactory","enableHomeBtn","NewPopup","logo","alt","handleDownload","html2canvas","current","canvas","dataUrl","toDataURL","workspaceName","Screenimage","alert","a","document","createElement","download","click","marginLeft","ref","Editor","onChanged","actions","tyle","Properties","Container","connect","bindActionCreators","ReactDOM","Provider","getElementById"],"sourceRoot":""}